{"version":3,"sources":["components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app/index.js","components/app/app.js","index.js"],"names":["ItemAddForm","state","label","onLabelChange","event","setState","target","value","onSubmit","preventDefault","props","addItem","className","this","type","placeholder","onChange","Component","AppHeader","toDo","done","ItemStatusFilter","buttons","name","filter","onFilterChange","map","isActive","key","onClick","SearchPanel","setSearchingText","searchingText","TodoListItem","onDeleted","onToggleDone","onToggleImportant","important","classNames","TodoList","todos","onSearch","elements","item","id","itemProps","App","maxId","todoData","createTodoItem","text","deleteItem","listItem","newItem","toggleProperty","toLowerCase","includes","arr","propName","items","doneItems","length","todoItems","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e050ff1a.chunk.js","sourcesContent":["import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from \"react\";\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (event) => {\r\n      this.setState({\r\n          label: event.target.value\r\n      });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className={'item-add-form d-flex'}\r\n                  onSubmit={this.onSubmit}>\r\n                <input type={'text'}\r\n                       className={'form-control'}\r\n                       placeholder={'what needs to be done'}\r\n                       onChange={this.onLabelChange}\r\n                       value={this.state.label}/>\r\n                <button className={'btn btn-outline-secondary'} >\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from \"react\";\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    );\n};\n\nexport default AppHeader;","import ItemStatusFilter from \"./item-status-filter\";\n\nexport default ItemStatusFilter;","import React, {Component} from \"react\";\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ];\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map( ({name, label}) => {\n            const isActive = filter === name;\n           return <button type={'button'}\n                          className={ isActive ? 'btn btn-info' : 'btn btn-outline-secondary'}\n                          key={name}\n                          onClick={ () => onFilterChange(name) }>\n                    {label}\n                  </button>\n        });\n\n        return (\n            <div className={'btn-group'}>\n                {buttons}\n            </div>\n        );\n    };\n}","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React from \"react\";\nimport './search-panel.css';\n\nconst SearchPanel = ({ setSearchingText, searchingText }) => {\n\n    const onSearch = (event) => {\n        setSearchingText(event.target.value);\n    };\n\n    return (\n        <input\n            type={\"text\"}\n            className={'form-control search-panel'}\n            placeholder={\"tap to search\"}\n            onChange={onSearch}\n            value={searchingText}/>\n    );\n};\n\nexport default SearchPanel;","import TodoListItem from \"./todo-list-item\";\n\nexport default TodoListItem;","import React from \"react\";\nimport './todo-list-item.css';\n\nexport default function TodoListItem(props) {\n    const {\n        label,\n        onDeleted,\n        onToggleDone,\n        onToggleImportant,\n        important,\n        done\n    } = props;\n\n    let classNames = 'todo-list-item-label';\n\n    if (done)\n        classNames += ' done';\n\n    if (important)\n        classNames += ' important';\n\n    return (\n        <span className={'todo-list-item'}>\n                <span\n                    className={classNames}\n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                  <button type={'button'}\n                          className={'btn btn-outline-success btn-sm float-right'}\n                          onClick={onToggleImportant}>\n                      <i className={'fa fa-exclamation'}/>\n                  </button>\n\n                  <button type={'button'}\n                          className={'btn btn-outline-danger btn-sm float-right'}\n                          onClick={onDeleted}>\n                      <i className={'fa fa-trash-o'}/>\n                  </button>\n              </span>\n    );\n}","import TodoList from \"./todo-list\";\n\nexport default TodoList;","import React from \"react\";\nimport TodoListItem from \"./../todo-list-item\";\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone, onSearch }) => {\n\n    const elements = todos.filter( (item) => onSearch(item.label) )\n        .map((item) => {\n        const { id, ...itemProps } = item;\n\n        return (\n            <li key={id} className={\"list-group-item\"}>\n                <TodoListItem { ...itemProps }\n                onDeleted={ () => { onDeleted(id) } }\n                onToggleImportant={ () => onToggleImportant(id) }\n                onToggleDone={ () => onToggleDone(id) }/>\n            </li>\n        );\n    });\n\n    return (\n        <ul className={\"list-group todo-list\"}>\n            { elements }\n        </ul>\n    );\n};\n\nexport default TodoList;","import App from './app';\n\nexport default App;","import React, { Component } from \"react\";\nimport ItemAddForm from \"../item-add-form\";\nimport AppHeader from \"./../app-header\";\nimport ItemStatusFilter from \"./../item-status-filter\";\nimport SearchPanel from \"./../search-panel\";\nimport TodoList from \"./../todo-list\";\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 1;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Learn React'),\n            this.createTodoItem('Have a lunch')\n        ],\n        searchingText: '',\n        filter: 'all'  //  all, active, done\n    };\n\n    createTodoItem(label) {\n      return {\n          label,\n          important: false,\n          done: false,\n          id: this.maxId++\n      }\n    };\n\n    setSearchingText = (text) => {\n        this.setState({\n            searchingText: text\n        });\n    };\n\n    deleteItem = (id) => {\n        this.setState( ( { todoData } ) => {\n            const newArray = todoData.filter( listItem => listItem.id !== id );\n            return {\n                todoData: newArray\n            }\n        } );\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState( ({ todoData }) => {\n            return {\n                todoData: [...todoData, newItem]\n            };\n        });\n    };\n\n    toggleProperty(arr, id, propName) {\n        return arr.map( (item) => {\n                if (item.id === id) {\n                    item[propName] = !item[propName];\n                }\n                return item;\n            }\n        );\n    };\n\n    onToggleImportant = (id) => {\n        this.setState( ({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        });\n    };\n\n    onToggleDone = (id) => {\n        this.setState( ({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        });\n    };\n\n    onSearch = ( label ) => {\n        if (!this.state.searchingText)\n            return true;\n        return label.toLowerCase().includes(this.state.searchingText.toLowerCase());\n    };\n\n    filter(items, filter) {\n\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter( (item) => !item.done );\n            case 'done':\n                return items.filter( (item) => item.done );\n            default:\n                return items;\n        }\n\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({ filter })\n    };\n\n    render() {\n\n        const { todoData, filter } = this.state;\n        const doneItems = todoData.filter( item => item.done ).length;\n        const todoItems = todoData.length - doneItems;\n        const visibleItems = this.filter( todoData, filter );\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={ todoItems } done={ doneItems }/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel setSearchingText={this.setSearchingText}\n                                 searchingText={this.state.searchingText}/>\n                    <ItemStatusFilter filter={ filter } onFilterChange={this.onFilterChange}/>\n                </div>\n\n                <TodoList todos={visibleItems}\n                          onDeleted={(id) => {\n                              this.deleteItem(id)\n                          }}\n                          onToggleDone={ this.onToggleDone }\n                          onToggleImportant={ this.onToggleImportant }\n                          onSearch={this.onSearch}/>\n                          <ItemAddForm addItem={ this.addItem }/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}